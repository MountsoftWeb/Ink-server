<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ink.dao.commentMapper">
    <resultMap id="BaseResultMap" type="com.ink.model.entity.comment">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="project_id" jdbcType="INTEGER" property="projectId" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="content" jdbcType="VARCHAR" property="content" />
        <result column="comment_time" jdbcType="VARCHAR" property="commentTime" />
    </resultMap>

    <resultMap id="commentResponse" type="com.ink.model.response.commentResponse">
        <result column="user_name" jdbcType="VARCHAR" property="username" />
        <result column="picture" jdbcType="VARCHAR" property="picture" />
        <result column="content" jdbcType="VARCHAR" property="content" />
        <result column="comment_time" jdbcType="VARCHAR" property="commentTime" />
    </resultMap>
<!-- resultMap="BaseResultMap" -->
    <select id="getCommentList" parameterType="java.lang.Integer" resultMap="commentResponse" >
        select u.user_name, u.picture, c.content, c.comment_time
        from comment c
            left join user u on c.user_id = u.id
        where project_id = #{projectId, jdbcType=INTEGER}
    </select>

    <insert id="insertComment" parameterType="com.ink.model.entity.comment">
        insert into comment (project_id, user_id, content, comment_time)
        values (
                #{comment.projectId, jdbcType=INTEGER},
                #{comment.userId, jdbcType=INTEGER},
                #{comment.content, jdbcType=VARCHAR},
                #{comment.commentTime, jdbcType=VARCHAR})
    </insert>

</mapper>