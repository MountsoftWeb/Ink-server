<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ink.dao.userMapper">
  <resultMap id="BaseResultMap" type="com.ink.model.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="profile" jdbcType="VARCHAR" property="profile" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="regist_time" jdbcType="VARCHAR" property="registTime" />
    <result column="major" jdbcType="VARCHAR" property="major" />
      <association property="user_login" javaType="com.ink.model.entity.user_login">
        <id property="id" column="id"/>
        <result property="userid" column="user_id"/>
        <result property="logintype" column="login_type"/>
        <result property="password" column="password"/>
        <result property="loginip" column="login_ip"/>
        <result property="logintime" column="login_time"/>
      </association>
  </resultMap>
  <!-- 返回头像地址 -->
  <resultMap id="picturePath" type="java.lang.String" >
    <result column="picture" property="picture" jdbcType="VARCHAR" />
  </resultMap>
  <!-- ID 名称 头像地址 -->
  <resultMap id="hotUsers" type="com.ink.model.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />

  </resultMap>

  <!-- 用户详细信息 -->
  <resultMap id="BaseUserDetail" type="com.ink.model.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="profile" jdbcType="VARCHAR" property="profile" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="regist_time" jdbcType="VARCHAR" property="registTime" />
    <result column="major" jdbcType="VARCHAR" property="major" />
  </resultMap>

  <resultMap id="user_id" type="java.lang.Integer">
    <id column="id" jdbcType="INTEGER" property="id" />
  </resultMap>

  <sql id="Base_Column_List">
    id, phone, user_name, profile, sex, picture, regist_time, major
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectPicture" parameterType="java.lang.String" resultMap="picturePath">
    select picture
    from user
    where phone = #{phone, jdbcType=VARCHAR}
  </select>

  <select id="selectByUserid" resultMap="BaseResultMap">
     select * from user u, user_login l where u.id=l.user_id
  </select>

  <select id="getDetail" parameterType="java.lang.String" resultMap="BaseUserDetail">
    select * 
    from user
    where phone = #{phone, jdbcType=VARCHAR}
  </select>

  <select id="selectByUsername" parameterType="java.lang.String" resultMap="user_id">
    select id
    from user
    where phone = #{phone, jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.ink.model.entity.User">
    insert into user (id, phone, user_name, profile, 
      sex, picture, registTime,
      major)
    values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{profile,jdbcType=VARCHAR},
      #{sex,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, #{registTime,jdbcType=VARCHAR},
      #{major,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.ink.model.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="profile != null">
        profile,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="registTime != null">
        registTime,
      </if>
      <if test="major != null">
        major,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        #{profile,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null">
        #{registtime,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <insert id="registerUser" parameterType="com.ink.model.entity.User">
    insert into user (phone, regist_time)
    values (#{user.userName, jdbcType=VARCHAR}, #{user.registTime, jdbcType=VARCHAR})
  </insert>

  <insert id="upFollow" parameterType="com.ink.model.entity.follow">
    insert into follows (user_id, follow_id, time)
    values (#{follow.userId, jdbcType=INTEGER},
            #{follow.followId, jdbcType=INTEGER},
            #{follow.time, jdbcType=VARCHAR})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.ink.model.entity.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        profile = #{profile,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="registTime != null">
        regist_time = #{registTime,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.ink.model.entity.User">
    update user
    set phone = #{phone,jdbcType=VARCHAR},
      profile = #{profile,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      regist_time = #{registTime,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updatePicture" parameterType="com.ink.model.entity.User">
    update user
    set picture = #{user.picture}
    where phone = #{user.userName}
  
  </update>

  <update id="updateDeatil" parameterType="com.ink.model.entity.User">
    update user 
      set user_name = #{user.username, jdbcType=VARCHAR},
          email = #{user.email, jdbcType=VARCHAR},
          profile = #{user.profile, jdbcType=VARCHAR},
          major = #{user.major, jdbcType=VARCHAR}
    where phone = #{user.phone, jdbcType=VARCHAR}

  </update>

  <select id="checkUser" parameterType="java.lang.String" resultType="java.lang.Boolean">
    <![CDATA[
      select count(id)
      from user
      where phone = #{phone, jdbcType=VARCHAR}
    ]]>
  </select>

  <select id="getHotUser" resultMap="hotUsers">
    select id, user_name, picture
    from user 
      order by id limit 10
  </select>
</mapper>